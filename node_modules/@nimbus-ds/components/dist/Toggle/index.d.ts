// Generated by dts-bundle-generator v7.2.0

import React from 'react';
import { HTMLAttributes, InputHTMLAttributes } from 'react';

export interface SkeletonProperties {
	/**
	 * Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own.
	 */
	width: string;
	/**
	 * Height of the skeleton. Useful when you don't want to adapt the skeleton to a text element but for instance a card.
	 */
	height: string;
	/**
	 * The border radius of the skeleton.
	 */
	borderRadius?: string;
	/**
	 * This is an attribute used to identify a DOM node for testing purposes.
	 */
	"data-testid"?: string;
}
export type SkeletonProps = SkeletonProperties & HTMLAttributes<HTMLDivElement>;
export type ToggleSkeletonProperties = Partial<Pick<SkeletonProps, "width" | "data-testid">>;
export type ToggleSkeletonProps = ToggleSkeletonProperties;
export declare const ToggleSkeleton: React.FC<ToggleSkeletonProps>;
export interface ToggleComponents {
	Skeleton: typeof ToggleSkeleton;
}
export interface ToggleProperties {
	/**
	 * The name of the input element.
	 */
	name: string;
	/**
	 * Sets toggle state to activated or deactivated.
	 */
	active?: boolean;
	/**
	 * Text to be rendered inside the component
	 */
	label?: string;
}
export type ToggleProps = ToggleProperties & InputHTMLAttributes<HTMLInputElement>;
export declare const Toggle: React.FC<ToggleProps> & ToggleComponents;

export {};
