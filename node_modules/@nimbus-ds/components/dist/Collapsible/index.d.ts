// Generated by dts-bundle-generator v7.2.0

import React from 'react';
import { HTMLAttributes, ReactNode } from 'react';

export interface CollapsibleBodyProperties {
	/**
	 * The content of the collapsible body.
	 * @TJS-type React.ReactNode
	 */
	children: ReactNode;
	/**
	 * Show Collapsible.Body when state is open or closed.
	 * @default open
	 */
	visibleWhen?: "open" | "closed";
	/**
	 * Set the direction that Collapsible.Body going to open
	 * @default none
	 */
	direction?: "top" | "bottom" | "none";
}
export type CollapsibleBodyProps = CollapsibleBodyProperties & HTMLAttributes<HTMLElement>;
export declare const CollapsibleBody: React.FC<CollapsibleBodyProps>;
export interface CollapsibleItemProperties {
	/**
	 * The content of the collapsible body.
	 * @TJS-type React.ReactNode
	 */
	children: ReactNode;
}
export type CollapsibleItemProps = CollapsibleItemProperties;
export declare const CollapsibleItem: React.FC<CollapsibleItemProps>;
export interface CollapsibleComponents {
	Body: typeof CollapsibleBody;
	Item: typeof CollapsibleItem;
}
export interface CollapsibleProperties {
	children?: ReactNode;
	open?: boolean;
}
export type CollapsibleBaseProps = CollapsibleProperties & Omit<HTMLAttributes<HTMLElement>, "onChange">;
export declare const Collapsible: React.FC<CollapsibleProperties> & CollapsibleComponents;

export {};
