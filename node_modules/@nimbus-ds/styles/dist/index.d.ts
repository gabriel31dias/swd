// Generated by dts-bundle-generator v7.2.0

import React from 'react';
import { HTMLAttributes, MutableRefObject } from 'react';

export type Theme = "dark" | "base" | "next" | "next-dark";
export interface ThemeProviderProps extends HTMLAttributes<HTMLElement> {
	theme?: Theme;
}
export declare const ThemeProvider: React.FC<ThemeProviderProps>;
export interface ThemeProviderContextProps {
	refThemeProvider: MutableRefObject<null | HTMLDivElement>;
	currentTheme: Theme;
}
export declare const useTheme: () => ThemeProviderContextProps;
/**
 * Creates a linear gradient with flexible direction and multiple color stops
 * @param direction - The direction of the gradient (e.g., "180deg", "to right", "45deg")
 * @param colorStops - Variable number of color stops (e.g., "red", "blue 50%", "rgba(0,255,0,0.8)")
 * @returns CSS linear-gradient string
 *
 * @example
 * createLinearGradient("180deg", "red", "blue")
 * createLinearGradient("to right", "red 0%", "yellow 50%", "blue 100%")
 * createLinearGradient("45deg", "rgba(255,0,0,0.5)", "transparent")
 */
export declare const createLinearGradient: (direction: string, ...colorStops: string[]) => string;
/**
 * Creates a border gradient with a fallback background color.
 * @param gradient - The gradient to use for the border. Commonly the return value of createLinearGradient function.
 * @param backgroundColor - The background color to use for the fallback.
 * @returns An array with the fallback background color and the border gradient.
 * @example Use case with vanilla-extract:
 * ```ts
 * const variants = vanillaStyle({
 *   background: createBorderGradient(gradients.aiGradient, "white"),
 *   border: `${varsThemeBase.shape.border.width[2]} solid transparent`, // Defines the gradient width, and makes the border transparent to ensure the gradient is visible.
 * });
 * ```
 */
export declare const createBorderGradient: (gradient: string, backgroundColor: string) => [
	string,
	string
];
export declare const badge: {
	classnames: {
		surface: Record<"primary" | "success" | "warning" | "danger" | "neutral", string>;
		light: Record<"primary" | "success" | "warning" | "danger" | "neutral", string>;
	};
};
export interface Conditions<T> {
	xs?: T;
	md?: T;
	lg?: T;
	xl?: T;
}
export type AspectRatio = "1/1" | "16/9" | "9/16" | "4/3" | "3/4" | "2/1" | "1/2";
export type BorderStyle = "solid" | "none" | "hidden" | "dashed" | "dotted";
export type BoxSizing = "border-box" | "content-box";
export type Cursor = "auto" | "pointer" | "not-allowed" | "grab" | "inherit";
export type Display = "block" | "flex" | "inline-flex" | "grid" | "inline-grid" | "none";
export type FlexWrap = "nowrap" | "wrap" | "wrap-reverse";
export type FlexDirection = "row" | "row-reverse" | "column" | "column-reverse";
export type JustifyContent = "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly";
export type AlignItems = "stretch" | "flex-start" | "flex-end" | "center" | "baseline";
export type AlignSelf = "auto" | "flex-start" | "flex-end" | "center" | "baseline" | "stretch";
export type TextAlign = "left" | "right" | "center" | "justify";
export type TextDecoration = "none" | "underline" | "line-through";
export type Position = "absolute" | "fixed" | "relative" | "static" | "sticky";
export type Overflow = "visible" | "hidden" | "scroll" | "auto";
export type PointerEvents = "auto" | "none" | "visiblePainted" | "visibleFill" | "visibleStroke" | "visible" | "painted" | "fill" | "stroke" | "all" | "inherit";
export type TransitionTiming = "ease" | "ease-in" | "ease-out" | "ease-in-out" | "linear" | "step-start" | "step-end";
export type WordBreak = "normal" | "break-all" | "keep-all" | "break-word";
declare const propertiesBox: {
	gap: {
		none: string;
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	gridGap: {
		none: string;
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	display: Display[];
	flexDirection: FlexDirection[];
	flexWrap: FlexWrap[];
	justifyContent: JustifyContent[];
	alignItems: AlignItems[];
	alignSelf: AlignSelf[];
	pointerEvents: PointerEvents[];
	backgroundColor: {
		"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`; /**
		 * The min height property specifies the height of a box's content area.
		 */
		"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"ai-generative-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"ai-generative-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		transparent: string;
	};
	background: {
		"ai-generative-interactive-border": string;
		"ai-generative-interactive": string;
		transparent: string;
	};
	color: {
		currentColor: string;
		"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`; /**
		 * The min height property specifies the height of a box's content area.
		 */
		"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"ai-generative-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"ai-generative-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		transparent: string;
	};
	borderColor: {
		"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		transparent: string;
	};
	borderRadius: {
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		half: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		none: string;
	};
	borderWidth: {
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		none: string;
	};
	borderStyle: BorderStyle[];
	boxSizing: BoxSizing[];
	cursor: Cursor[];
	spacing: {
		none: string;
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	margin: {
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		auto: string;
		none: string;
	};
	position: Position[];
	overflow: Overflow[];
	overflowX: Overflow[];
	overflowY: Overflow[];
	boxShadow: {
		"0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		focusRing: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		aiFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	transitionDuration: {
		base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		fast: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		slow: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		slower: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	transitionTimingFunction: TransitionTiming[];
	textDecoration: TextDecoration[];
	zIndex: {
		"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	textAlign: TextAlign[];
	fontWeight: {
		regular: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	fontSize: {
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`; /**
		 * This defines the ability for a flex item to shrink if necessary.
		 */
		h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	lineHeight: {
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
};
export type BoxBorderColorProperties = keyof typeof propertiesBox.borderColor;
export type BoxBorderRadiusProperties = keyof typeof propertiesBox.borderRadius;
export type BoxBorderWidthProperties = keyof typeof propertiesBox.borderWidth;
export type BoxBackgroundColorProperties = keyof typeof propertiesBox.backgroundColor;
export type BoxColorProperties = keyof typeof propertiesBox.color;
export type BoxShadowProperties = keyof typeof propertiesBox.boxShadow;
export type BoxSpacingProperties = keyof typeof propertiesBox.spacing;
export type BoxMarginProperties = keyof typeof propertiesBox.margin;
export type BoxGapProperties = keyof typeof propertiesBox.gap;
export type BoxGridGapProperties = keyof typeof propertiesBox.gridGap;
export type BoxZIndexProperties = keyof typeof propertiesBox.zIndex;
export type BoxTransitionDurationProperties = keyof typeof propertiesBox.transitionDuration;
export type BoxFontSizeProperties = keyof typeof propertiesBox.fontSize;
export type BoxFontWeightProperties = keyof typeof propertiesBox.fontWeight;
export type BoxLineHeightProperties = keyof typeof propertiesBox.lineHeight;
export type BoxBackgroundProperties = keyof typeof propertiesBox.background;
export interface BoxConditions<T> extends Conditions<T> {
	focus?: T;
	focusWithin?: T;
	active?: T;
	hover?: T;
	disabled?: T;
}
export interface BoxSprinkle {
	/**
	 * The width property specifies the width of a box's content area.
	 */
	width?: string | BoxConditions<string>;
	/**
	 * The height property specifies the height of a box's content area.
	 */
	height?: string | BoxConditions<string>;
	/**
	 * The max width property specifies the width of a box's content area.
	 */
	maxWidth?: string | BoxConditions<string>;
	/**
	 * The max height property specifies the height of a box's content area.
	 */
	maxHeight?: string | BoxConditions<string>;
	/**
	 * The min width property specifies the width of a box's content area.
	 */
	minWidth?: string | BoxConditions<string>;
	/**
	 * The min height property specifies the height of a box's content area.
	 */
	minHeight?: string | BoxConditions<string>;
	/**
	 * The bottom property participates in setting the vertical position of a positioned box.
	 */
	bottom?: string | BoxConditions<string>;
	/**
	 * The left property participates in specifying the horizontal position of a positioned box.
	 */
	left?: string | BoxConditions<string>;
	/**
	 * The right property participates in specifying the horizontal position of a positioned box.
	 */
	right?: string | BoxConditions<string>;
	/**
	 * The top property participates in setting the vertical position of a positioned box.
	 */
	top?: string | BoxConditions<string>;
	/**
	 * This is the shorthand for flexGrow, flexShrink and flexBasis combined.
	 */
	flex?: string | BoxConditions<string>;
	/**
	 * This defines the ability for a flex item to shrink if necessary.
	 */
	flexShrink?: string | BoxConditions<string>;
	/**
	 * This defines the ability for a flex item to grow if necessary.
	 */
	flexGrow?: string | BoxConditions<string>;
	/**
	 * The flexWrap property sets whether flex items are forced onto one line or can wrap onto multiple lines.
	 */
	flexWrap?: FlexWrap | BoxConditions<FlexWrap>;
	/**
	 * The order property controls the order in which they appear in a flex container.
	 */
	order?: string | BoxConditions<string>;
	/**
	 * The gridTemplateColumns property defines the line names and track sizing functions of the grid columns.
	 */
	gridTemplateColumns?: string | BoxConditions<string>;
	/**
	 * The gridTemplateAreas property specifies named grid areas, establishing the cells in the grid and assigning them names.
	 */
	gridTemplateAreas?: string | BoxConditions<string>;
	/**
	 * The gridTemplateRows property defines the line names and track sizing functions of the grid rows.
	 */
	gridTemplateRows?: string | BoxConditions<string>;
	/**
	 * The gridArea shorthand property specifies a grid item's size and location within a grid by contributing a line,
	 * a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.
	 */
	gridArea?: string | BoxConditions<string>;
	/**
	 * The display property sets whether an box is treated as a block or inline element and the layout used for its children,
	 * such as grid or flex.
	 */
	display?: Display | BoxConditions<Display>;
	/**
	 * The justifyContent property defines how the browser distributes space between and around content items along
	 * the main-axis of a flex container, and the inline axis of a grid container.
	 */
	justifyContent?: JustifyContent | BoxConditions<JustifyContent>;
	/**
	 * The flexDirection property sets how flex items are placed in the flex container defining the main axis and the direction.
	 */
	flexDirection?: FlexDirection | BoxConditions<FlexDirection>;
	/**
	 * The alignItems property sets the align-self value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis.
	 * In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.
	 */
	alignItems?: AlignItems | BoxConditions<AlignItems>;
	/**
	 * The alignSelf property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area.
	 * In Flexbox, it aligns the item on the cross axis.
	 */
	alignSelf?: AlignSelf | BoxConditions<AlignSelf>;
	/**
	 * The gap property sets the gaps between rows and columns. It is a shorthand for rowGap and columnGap.
	 */
	gap?: BoxGapProperties | BoxConditions<BoxGapProperties>;
	/**
	 * The gridGap property sets the gaps between rows and columns. It is a shorthand for rowGap and columnGap.
	 */
	gridGap?: BoxGridGapProperties | BoxConditions<BoxGridGapProperties>;
	/**
	 * The pointerEvents property sets under what circumstances (if any) a particular graphic element can become the target of pointer events.
	 */
	pointerEvents?: PointerEvents | BoxConditions<PointerEvents>;
	/**
	 * The position property sets how an box is positioned in a document.
	 */
	position?: Position | BoxConditions<Position>;
	/**
	 * The overflow shorthand property sets the desired behavior for an box's overflow.
	 */
	overflow?: Overflow | BoxConditions<Overflow>;
	/**
	 * The overflow-x property sets what shows when content overflows a block-level box's left and right edges.
	 */
	overflowX?: Overflow | BoxConditions<Overflow>;
	/**
	 * The overflow-y property sets what shows when content overflows a block-level box's top and bottom edges.
	 */
	overflowY?: Overflow | BoxConditions<Overflow>;
	/**
	 * The cursor property sets the mouse cursor, if any, to show when the mouse pointer is over an box.
	 */
	cursor?: Cursor | BoxConditions<Cursor>;
	/**
	 * The backgroundColor property sets the background color of the box.
	 * @default neutral-background
	 * @examples ["neutral-interactive", { xs: "neutral-surface", md: "neutral-interactive" }]
	 */
	backgroundColor?: BoxBackgroundColorProperties | BoxConditions<BoxBackgroundColorProperties>;
	/**
	 * The color property is used to set the color of the box.
	 */
	color?: BoxColorProperties | BoxConditions<BoxColorProperties>;
	/**
	 * The borderRadius property rounds the corners of an box's outer border edge.
	 */
	borderRadius?: BoxBorderRadiusProperties | BoxConditions<BoxBorderRadiusProperties>;
	/**
	 * The borderWidth property sets the width of an box's border.
	 */
	borderWidth?: BoxBorderWidthProperties | BoxConditions<BoxBorderWidthProperties>;
	/**
	 * The borderTopWidth property defines the width of the border at the top of a box.
	 */
	borderTopWidth?: BoxBorderWidthProperties | BoxConditions<BoxBorderWidthProperties>;
	/**
	 * The borderBottomWidth property defines the width of the border at the bottom of a box.
	 */
	borderBottomWidth?: BoxBorderWidthProperties | BoxConditions<BoxBorderWidthProperties>;
	/**
	 * The borderLeftWidth property defines the width of the border at the left of a box.
	 */
	borderLeftWidth?: BoxBorderWidthProperties | BoxConditions<BoxBorderWidthProperties>;
	/**
	 * The borderRightWidth property defines the width of the border at the right of a box.
	 */
	borderRightWidth?: BoxBorderWidthProperties | BoxConditions<BoxBorderWidthProperties>;
	/**
	 * The borderWidthX shorthand property defines the width of the element's border on the left and right.
	 */
	borderWidthX?: BoxBorderWidthProperties | BoxConditions<BoxBorderWidthProperties>;
	/**
	 * The borderWidthY shorthand property defines the width of the element's border on the top and bottom.
	 */
	borderWidthY?: BoxBorderWidthProperties | BoxConditions<BoxBorderWidthProperties>;
	/**
	 * The borderColor property sets the color of the box's four borders.
	 */
	borderColor?: BoxBorderColorProperties | BoxConditions<BoxBorderColorProperties>;
	/**
	 * borderStyle property sets the line style for all four sides of an box's border.
	 */
	borderStyle?: BorderStyle | BoxConditions<BorderStyle>;
	/**
	 * The boxSizing property sets how the total width and height of an box is calculated.
	 * @default border-box
	 */
	boxSizing?: BoxSizing | BoxConditions<BoxSizing>;
	/**
	 * The boxShadow property adds shadow effects around an box's frame.
	 */
	boxShadow?: BoxShadowProperties | BoxConditions<BoxShadowProperties>;
	/**
	 * The padding properties are used to generate space around an box's content area.
	 */
	padding?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The paddingTop property sets the height of the padding area on the top of an box.
	 */
	paddingTop?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The paddingBottom property sets the height of the padding area on the bottom of an box.
	 */
	paddingBottom?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The paddingLeft property sets the width of the padding area to the left of an box.
	 */
	paddingLeft?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The paddingLeft property sets the width of the padding area to the right of an box.
	 */
	paddingRight?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The margin shorthand property sets the margin area on all four sides of an box.
	 */
	margin?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The marginTop property sets the margin area on the top of an box.
	 */
	marginTop?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The marginBottom property sets the margin area on the bottom of an box.
	 */
	marginBottom?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The marginLeft property sets the margin area on the left side of an box.
	 */
	marginLeft?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The marginRight property sets the margin area on the right side of an box.
	 */
	marginRight?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The transitionTimingFunction property sets how intermediate values are calculated for CSS properties being affected by a transition effect.
	 */
	transitionTimingFunction?: TransitionTiming | BoxConditions<TransitionTiming>;
	/**
	 * The transitionProperty property sets the CSS properties to which a transition effect should be applied.
	 */
	transitionProperty?: string | BoxConditions<string>;
	/**
	 * The transitionDelay property specifies the duration to wait before starting a property's transition effect when its value changes.
	 */
	transitionDelay?: string | BoxConditions<string>;
	/**
	 * The transitionDuration property sets the length of time a transition animation should take to complete. By default, the value is 0s, meaning that no animation will occur.
	 */
	transitionDuration?: BoxTransitionDurationProperties | BoxConditions<BoxTransitionDurationProperties>;
	/**
	 * The zIndex property specifies the stack order of the box.
	 */
	zIndex?: BoxZIndexProperties | BoxConditions<BoxZIndexProperties>;
	/**
	 * The background property sets the background of the box.
	 */
	background?: BoxBackgroundProperties | BoxConditions<BoxBackgroundProperties>;
	/**
	 * The backgroundImage property sets one or more background images on an element.
	 */
	backgroundImage?: string | BoxConditions<string>;
	/**
	 * The backgroundPosition property sets the initial position for each background image.
	 * The position is relative to the position layer set by background-origin.
	 */
	backgroundPosition?: string | BoxConditions<string>;
	/**
	 * The backgroundBlendMode property sets how an element's background images should blend with each
	 * other and with the element's background color.
	 */
	backgroundBlendMode?: string | BoxConditions<string>;
	/**
	 * The backgroundRepeat property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.
	 */
	backgroundRepeat?: string | BoxConditions<string>;
	/**
	 * The textDecoration shorthand property sets the appearance of decorative lines on text.
	 */
	textDecoration?: TextDecoration | BoxConditions<TextDecoration>;
	/**
	 * The backgroundSize property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.
	 */
	backgroundSize?: string | BoxConditions<string>;
	/**
	 * The p shorthand property sets the margin area on all four sides of an box.
	 */
	p?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The pl shorthand property sets the width of the padding area to the left of an box.
	 */
	pl?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The pl shorthand property sets the width of the padding area to the right of an box.
	 */
	pr?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The pt shorthand property sets the height of the padding area on the top of an box.
	 */
	pt?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The pb shorthand property sets the height of the padding area on the botton of an box.
	 */
	pb?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The px shorthand property defines the width of the left and right padding area of a box.
	 */
	px?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The py pt shorthand property sets the height of the padding area at the top and bottom of a box.
	 */
	py?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The paddingX shorthand property defines the width of the left and right padding area of a box.
	 */
	paddingX?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The paddingY pt shorthand property sets the height of the padding area at the top and bottom of a box.
	 */
	paddingY?: BoxSpacingProperties | BoxConditions<BoxSpacingProperties>;
	/**
	 * The m shorthand property sets the margin area on all four sides of an box.
	 */
	m?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The mr property sets the margin area on the right side of an box.
	 */
	mr?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The ml property sets the margin area on the left side of an box.
	 */
	ml?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The mt property sets the margin area on the top of an box.
	 */
	mt?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The marginBottom property sets the margin area on the bottom of an box.
	 */
	mb?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The mx property defines the margin area on the left and right side of a box.
	 */
	mx?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The my property defines the margin area on the top and bottom of a box
	 */
	my?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The marginX property defines the margin area on the left and right side of a box.
	 */
	marginX?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The marginY property defines the margin area on the top and bottom of a box
	 */
	marginY?: BoxMarginProperties | BoxConditions<BoxMarginProperties>;
	/**
	 * The fontSize property sets the size of the box.
	 * @default base
	 */
	fontSize?: BoxFontSizeProperties | BoxConditions<BoxFontSizeProperties>;
	/**
	 * The fontWeight property sets how thick or thin characters in box should be displayed.
	 * @default regular
	 */
	fontWeight?: BoxFontWeightProperties | BoxConditions<BoxFontWeightProperties>;
	/**
	 * The lineHeight property specifies the line height of the box.
	 * @default base
	 */
	lineHeight?: BoxLineHeightProperties | BoxConditions<BoxLineHeightProperties>;
	/**
	 * The textAlign property specifies the horizontal alignment of box.
	 * @default left
	 */
	textAlign?: TextAlign | BoxConditions<TextAlign>;
}
export declare const box: {
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {
				display: {
					values: {
						grid: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						none: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						flex: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						block: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"inline-flex": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"inline-grid": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: Display[];
					name: "display";
				};
				flexDirection: {
					values: {
						row: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						column: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"column-reverse": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"row-reverse": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: FlexDirection[];
					name: "flexDirection";
				};
				flexWrap: {
					values: {
						nowrap: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						wrap: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"wrap-reverse": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: FlexWrap[];
					name: "flexWrap";
				};
				justifyContent: {
					values: {
						center: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"flex-end": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"flex-start": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"space-around": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"space-between": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"space-evenly": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: JustifyContent[];
					name: "justifyContent";
				};
				alignItems: {
					values: {
						center: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"flex-end": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"flex-start": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						baseline: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						stretch: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: AlignItems[];
					name: "alignItems";
				};
				alignSelf: {
					values: {
						center: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"flex-end": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"flex-start": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						baseline: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						stretch: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						auto: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: AlignSelf[];
					name: "alignSelf";
				};
				pointerEvents: {
					values: {
						inherit: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						none: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						all: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						fill: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						stroke: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						auto: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						visible: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						painted: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						visibleFill: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						visiblePainted: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						visibleStroke: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: PointerEvents[];
					name: "pointerEvents";
				};
				borderStyle: {
					values: {
						hidden: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						none: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						dashed: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						dotted: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						solid: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: BorderStyle[];
					name: "borderStyle";
				};
				boxSizing: {
					values: {
						"border-box": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"content-box": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: BoxSizing[];
					name: "boxSizing";
				};
				cursor: {
					values: {
						inherit: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						auto: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						grab: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"not-allowed": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						pointer: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: Cursor[];
					name: "cursor";
				};
				position: {
					values: {
						fixed: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						absolute: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						relative: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						static: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						sticky: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: Position[];
					name: "position";
				};
				overflow: {
					values: {
						hidden: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						auto: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						visible: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						scroll: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: Overflow[];
					name: "overflow";
				};
				overflowX: {
					values: {
						hidden: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						auto: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						visible: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						scroll: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: Overflow[];
					name: "overflowX";
				};
				overflowY: {
					values: {
						hidden: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						auto: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						visible: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						scroll: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: Overflow[];
					name: "overflowY";
				};
				transitionTimingFunction: {
					values: {
						ease: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"ease-in": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"ease-in-out": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"ease-out": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"step-end": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"step-start": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						linear: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: TransitionTiming[];
					name: "transitionTimingFunction";
				};
				textDecoration: {
					values: {
						none: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"line-through": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						underline: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: TextDecoration[];
					name: "textDecoration";
				};
				lineHeight: {
					values: {
						h1: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h2: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h3: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h4: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h5: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h6: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						1: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						2: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						3: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						4: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						5: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"0-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						6: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"1-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"2-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"3-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"4-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						7: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						8: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						9: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						10: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						11: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						12: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						14: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						16: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						18: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						20: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: {
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "lineHeight";
				};
				fontWeight: {
					values: {
						regular: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						medium: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						bold: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: {
						regular: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "fontWeight";
				};
				fontSize: {
					values: {
						h1: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h2: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h3: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h4: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h5: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						h6: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						1: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						2: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						3: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						4: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						5: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"0-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						6: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"1-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"2-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"3-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						"4-5": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						7: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						8: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						9: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						10: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						11: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						12: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						14: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						16: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						18: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						20: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: {
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "fontSize";
				};
				textAlign: {
					values: {
						center: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						left: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						right: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
						justify: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
						};
					};
					staticScale: TextAlign[];
					name: "textAlign";
				};
			};
		} & {
			config: {
				width: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "width";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				height: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "height";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				maxWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "maxWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				maxHeight: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "maxHeight";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				minWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "minWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				minHeight: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "minHeight";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				bottom: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "bottom";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				left: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "left";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				right: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "right";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				top: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "top";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				flex: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "flex";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				gridTemplateAreas: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "gridTemplateAreas";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				gridTemplateColumns: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "gridTemplateColumns";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				gridTemplateRows: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "gridTemplateRows";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				gridArea: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "gridArea";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				flexShrink: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "flexShrink";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				flexGrow: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "flexGrow";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				order: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "order";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				transitionDelay: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "transitionDelay";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				transitionProperty: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "transitionProperty";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				backgroundImage: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "backgroundImage";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				backgroundPosition: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "backgroundPosition";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				backgroundBlendMode: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "backgroundBlendMode";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				backgroundRepeat: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "backgroundRepeat";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				backgroundSize: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: true;
					name: "backgroundSize";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				transitionDuration: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						fast: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						slow: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						slower: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "transitionDuration";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				background: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"ai-generative-interactive-border": string;
						"ai-generative-interactive": string;
						transparent: string;
					};
					name: "background";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				backgroundColor: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"ai-generative-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"ai-generative-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						transparent: string;
					};
					name: "backgroundColor";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				borderColor: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						transparent: string;
					};
					name: "borderColor";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				borderRadius: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						half: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "borderRadius";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				borderWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "borderWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				borderTopWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "borderTopWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				borderBottomWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "borderBottomWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				borderLeftWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "borderLeftWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				borderRightWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "borderRightWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				boxShadow: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						focusRing: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						aiFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "boxShadow";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				padding: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						none: string;
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "padding";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				paddingTop: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						none: string;
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "paddingTop";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				paddingBottom: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						none: string;
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "paddingBottom";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				paddingLeft: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						none: string;
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "paddingLeft";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				paddingRight: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						none: string;
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "paddingRight";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				margin: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						auto: string;
						none: string;
					};
					name: "margin";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				marginTop: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						auto: string;
						none: string;
					};
					name: "marginTop";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				marginBottom: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						auto: string;
						none: string;
					};
					name: "marginBottom";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				marginLeft: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						auto: string;
						none: string;
					};
					name: "marginLeft";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				marginRight: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						auto: string;
						none: string;
					};
					name: "marginRight";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				gap: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						none: string;
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "gap";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				gridGap: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						none: string;
						"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "gridGap";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				color: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						currentColor: string;
						"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"ai-generative-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"ai-generative-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						transparent: string;
					};
					name: "color";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
				zIndex: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
					dynamicScale: {
						"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "zIndex";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "disabled" | "hover" | "focusWithin", string>;
					};
				};
			};
		} & {
			config: {
				borderWidth: {
					mappings: ("borderBottomWidth" | "borderLeftWidth" | "borderRightWidth" | "borderTopWidth")[];
				};
				borderWidthX: {
					mappings: ("borderLeftWidth" | "borderRightWidth")[];
				};
				borderWidthY: {
					mappings: ("borderBottomWidth" | "borderTopWidth")[];
				};
				padding: {
					mappings: ("paddingBottom" | "paddingLeft" | "paddingRight" | "paddingTop")[];
				};
				paddingX: {
					mappings: ("paddingLeft" | "paddingRight")[];
				};
				paddingY: {
					mappings: ("paddingBottom" | "paddingTop")[];
				};
				p: {
					mappings: "padding"[];
				};
				pl: {
					mappings: "paddingLeft"[];
				};
				pr: {
					mappings: "paddingRight"[];
				};
				pt: {
					mappings: "paddingTop"[];
				};
				pb: {
					mappings: "paddingBottom"[];
				};
				px: {
					mappings: ("paddingLeft" | "paddingRight")[];
				};
				py: {
					mappings: ("paddingBottom" | "paddingTop")[];
				};
				margin: {
					mappings: ("marginBottom" | "marginLeft" | "marginRight" | "marginTop")[];
				};
				marginX: {
					mappings: ("marginLeft" | "marginRight")[];
				};
				marginY: {
					mappings: ("marginBottom" | "marginTop")[];
				};
				m: {
					mappings: "margin"[];
				};
				mr: {
					mappings: "marginRight"[];
				};
				ml: {
					mappings: "marginLeft"[];
				};
				mt: {
					mappings: "marginTop"[];
				};
				mb: {
					mappings: "marginBottom"[];
				};
				mx: {
					mappings: ("marginLeft" | "marginRight")[];
				};
				my: {
					mappings: ("marginBottom" | "marginTop")[];
				};
			};
		}
	]>;
	properties: {
		gap: {
			none: string;
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		gridGap: {
			none: string;
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		display: Display[];
		flexDirection: FlexDirection[];
		flexWrap: FlexWrap[];
		justifyContent: JustifyContent[];
		alignItems: AlignItems[];
		alignSelf: AlignSelf[];
		pointerEvents: PointerEvents[];
		backgroundColor: {
			"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"ai-generative-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"ai-generative-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			transparent: string;
		};
		background: {
			"ai-generative-interactive-border": string;
			"ai-generative-interactive": string;
			transparent: string;
		};
		color: {
			currentColor: string;
			"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"ai-generative-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"ai-generative-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			transparent: string;
		};
		borderColor: {
			"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			transparent: string;
		};
		borderRadius: {
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			half: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			none: string;
		};
		borderWidth: {
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			none: string;
		};
		borderStyle: BorderStyle[];
		boxSizing: BoxSizing[];
		cursor: Cursor[];
		spacing: {
			none: string;
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		margin: {
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			auto: string;
			none: string;
		};
		position: Position[];
		overflow: Overflow[];
		overflowX: Overflow[];
		overflowY: Overflow[];
		boxShadow: {
			"0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			focusRing: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			aiFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		transitionDuration: {
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			fast: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			slow: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			slower: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		transitionTimingFunction: TransitionTiming[];
		textDecoration: TextDecoration[];
		zIndex: {
			"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		textAlign: TextAlign[];
		fontWeight: {
			regular: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		fontSize: {
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		lineHeight: {
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
	};
};
export declare const button: {
	classnames: {
		fullWidth: string;
		appearance: Record<"primary" | "danger" | "neutral" | "transparent" | "ai-primary" | "ai-secondary", string>;
	};
};
export declare const checkbox: {
	sprinkle: ((props: {
		borderColor?: "primary-interactive" | "danger-interactive" | "neutral-interactive" | undefined;
		cursor?: Cursor | undefined;
	}) => string) & {
		properties: Set<"cursor" | "borderColor">;
	};
	properties: {
		borderColor: {
			"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		cursor: Cursor[];
	};
	classnames: {
		container: string;
		container__input: string;
		container__checkmark: string;
		container__checkmark_checkicon: string;
		container__checkmark_checkindeterminate: string;
	};
};
export declare const chip: {
	classnames: {
		base: string;
		chip_close_icon_container: string;
		aiGenerated: string;
	};
};
export declare const fileUploader: {
	sprinkle: ((props: {
		aspectRatio?: "none" | AspectRatio | undefined;
		flexDirection?: "row" | "column" | undefined;
		cursor?: Cursor | undefined;
	}) => string) & {
		properties: Set<"aspectRatio" | "cursor" | "flexDirection">;
	};
	properties: {
		aspectRatio: readonly [
			"none",
			...AspectRatio[]
		];
		flexDirection: readonly [
			"row",
			"column"
		];
		cursor: Cursor[];
	};
	classnames: {
		container: string;
		container__input: string;
		disabled: string;
		skeleton: string;
	};
};
export declare const icon: {
	sprinkle: ((props: {
		color?: "currentColor" | "primary-interactive" | "primary-surface" | "primary-textLow" | "success-textLow" | "success-surface" | "warning-interactive" | "warning-surface" | "warning-textLow" | "danger-interactive" | "danger-surface" | "danger-textLow" | "neutral-background" | "neutral-interactive" | "neutral-surface" | "neutral-textLow" | "success-interactive" | "ai-generative" | "primary-textHigh" | "success-textHigh" | "warning-textHigh" | "danger-textHigh" | "neutral-textDisabled" | "neutral-textHigh" | undefined;
		cursor?: Cursor | undefined;
	}) => string) & {
		properties: Set<"color" | "cursor">;
	};
	properties: {
		color: {
			currentColor: string;
			"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"ai-generative": string;
		};
		cursor: Cursor[];
	};
	classnames: {
		base: string;
	};
};
declare const propertiesIconButton: {
	backgroundColor: {
		transparent: string;
		"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"ai-generativeSurface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	borderColor: {
		"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-interactivePressed": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		transparent: string;
		"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"ai-generativeSurface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
};
export type IconButtonBackgroundColorProperties = keyof typeof propertiesIconButton.backgroundColor;
export type IconButtonBorderColorProperties = keyof typeof propertiesIconButton.borderColor;
export interface IconButtonConditions<T> extends Conditions<T> {
	focus?: T;
	active?: T;
	hover?: T;
}
export interface IconButtonSprinkle {
	/**
	 * The size of the component.
	 * @default 2.75rem
	 */
	size?: string | IconButtonConditions<string>;
	/**
	 * The borderColor property sets the color of the icon button's four borders.
	 * @default { xs: "neutral-interactive", active: "neutral-interactivePressed", hover: "neutral-interactiveHover", focus: "primary-interactive" }
	 */
	borderColor?: IconButtonBorderColorProperties | IconButtonConditions<IconButtonBorderColorProperties>;
	/**
	 * The backgroundColor property sets the background color of the icon button.
	 * @default {  xs: "neutral-surface", active: "neutral-interactive", hover: "neutral-surfaceHighlight" }
	 */
	backgroundColor?: IconButtonBackgroundColorProperties | IconButtonConditions<IconButtonBackgroundColorProperties>;
}
export declare const iconButton: {
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {};
		} & {
			config: {
				backgroundColor: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "hover", string>;
					};
					dynamicScale: {
						transparent: string;
						"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"ai-generativeSurface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "backgroundColor";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "hover", string>;
					};
				};
				borderColor: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "hover", string>;
					};
					dynamicScale: {
						"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-interactivePressed": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						transparent: string;
						"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"ai-generativeSurface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "borderColor";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "hover", string>;
					};
				};
				width: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "hover", string>;
					};
					dynamicScale: true;
					name: "width";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "hover", string>;
					};
				};
				height: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "hover", string>;
					};
					dynamicScale: true;
					name: "height";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "active" | "hover", string>;
					};
				};
			};
		} & {
			config: {
				size: {
					mappings: ("width" | "height")[];
				};
			};
		}
	]>;
	properties: {
		backgroundColor: {
			transparent: string;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"ai-generativeSurface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		borderColor: {
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactivePressed": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			transparent: string;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"ai-generativeSurface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
	};
	classnames: {
		base: string;
		appearance: Record<"ai-generative", string>;
	};
};
export declare const input: {
	classnames: {
		input: string;
		container: string;
		container__icon: string;
		container__icon_append: Record<"end" | "start", string>;
		container__button: string;
		appearance: Record<"success" | "warning" | "danger" | "neutral" | "ai-generative", string>;
		aiGenerated: string;
	};
};
export declare const label: {
	classnames: {
		base: string;
		hidden: string;
	};
};
export declare const tag: {
	classnames: {
		appearance: Record<"primary" | "success" | "warning" | "danger" | "neutral" | "ai-generative", string>;
	};
};
declare const propertiesText: {
	color: {
		"ai-generative": "transparent";
		currentColor: string;
		"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-textDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	textAlign: TextAlign[];
	lineHeight: {
		readonly caption: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		readonly highlight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	fontWeight: {
		regular: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	fontSize: {
		caption: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		highlight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	wordBreak: WordBreak[];
	textDecoration: TextDecoration[];
};
export type TextColorProperties = keyof typeof propertiesText.color;
export type TextFontSizeProperties = keyof typeof propertiesText.fontSize;
export type TextFontWeightProperties = keyof typeof propertiesText.fontWeight;
export type TextLineHeightProperties = keyof typeof propertiesText.lineHeight;
export type TextConditions<T> = Conditions<T>;
export interface TextSprinkle {
	/**
	 * The fontSize property sets the size of the text.
	 * @default base
	 */
	fontSize?: TextFontSizeProperties | TextConditions<TextFontSizeProperties>;
	/**
	 * The fontWeight property sets how thick or thin characters in text should be displayed.
	 * @default regular
	 */
	fontWeight?: TextFontWeightProperties | TextConditions<TextFontWeightProperties>;
	/**
	 * The lineHeight property specifies the line height of the text.
	 * @default base
	 */
	lineHeight?: TextLineHeightProperties | TextConditions<TextLineHeightProperties>;
	/**
	 * The textAlign property specifies the horizontal alignment of text.
	 * @default left
	 */
	textAlign?: TextAlign | TextConditions<TextAlign>;
	/**
	 * The color property is used to set the color of the text.
	 * Note: Gradients like 'ai-generative' changes other properties like 'width' and 'display', which could make the component behave differently. Ensure to visually test the component when dynamically changing the color.
	 * @default neutral-textLow
	 */
	color?: TextColorProperties | TextConditions<TextColorProperties>;
	/**
	 * The amount of lines at which the text will be trimmed, showing an ellipsis when overflowed.
	 */
	lineClamp?: number | TextConditions<number>;
	/**
	 * The amount of lines at which the text will be trimmed, showing an ellipsis when overflowed.
	 */
	WebkitLineClamp?: number | TextConditions<number>;
	/**
	 * The amount of lines at which the text will be trimmed, showing an ellipsis when overflowed.
	 */
	wordBreak?: WordBreak | TextConditions<WordBreak>;
	/**
	 * The textDecoration shorthand property sets the appearance of decorative lines on text.
	 */
	textDecoration?: TextDecoration | TextConditions<TextDecoration>;
}
export declare const text: {
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {
				color: {
					values: {
						currentColor: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"primary-interactive": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"primary-surface": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"primary-textLow": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"success-textLow": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"success-surface": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"warning-interactive": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"warning-surface": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"warning-textLow": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"danger-interactive": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"danger-surface": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"danger-textLow": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-background": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-interactive": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-surface": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-textLow": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"success-interactive": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"ai-generative": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"primary-textHigh": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"success-textHigh": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"warning-textHigh": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"danger-textHigh": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-textDisabled": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-textHigh": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						"ai-generative": "transparent";
						currentColor: string;
						"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-textDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "color";
				};
				textAlign: {
					values: {
						center: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						left: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						right: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						justify: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: TextAlign[];
					name: "textAlign";
				};
				lineHeight: {
					values: {
						caption: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						base: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						highlight: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						readonly caption: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						readonly highlight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "lineHeight";
				};
				fontWeight: {
					values: {
						regular: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						medium: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						bold: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						regular: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "fontWeight";
				};
				fontSize: {
					values: {
						caption: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						base: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						highlight: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						caption: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						highlight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "fontSize";
				};
				wordBreak: {
					values: {
						normal: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"break-word": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"break-all": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"keep-all": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: WordBreak[];
					name: "wordBreak";
				};
				textDecoration: {
					values: {
						none: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"line-through": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						underline: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: TextDecoration[];
					name: "textDecoration";
				};
			};
		} & {
			config: {
				lineClamp: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: true;
					name: "lineClamp";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
				WebkitLineClamp: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: boolean;
					name: "WebkitLineClamp";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
			};
		} & {
			config: {
				[x: string]: {
					mappings: ("fontSize" | "fontWeight" | "color" | "lineHeight" | "textAlign" | "wordBreak" | "lineClamp" | "textDecoration" | "WebkitLineClamp")[];
				};
			};
		}
	]>;
	properties: {
		color: {
			"ai-generative": "transparent";
			currentColor: string;
			"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textDisabled": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		textAlign: TextAlign[];
		lineHeight: {
			readonly caption: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			readonly highlight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		fontWeight: {
			regular: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		fontSize: {
			caption: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			highlight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		wordBreak: WordBreak[];
		textDecoration: TextDecoration[];
	};
	aiColors: {
		readonly "ai-generative": "transparent";
	};
	aiStyles: {
		readonly "ai-generative": string;
	};
	classnames: {
		base: string;
		trim: string;
		aiGenerative: string;
		aiStyles: {
			readonly "ai-generative": string;
		};
	};
};
declare const propertiesTitle: {
	color: {
		"primary-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	textAlign: TextAlign[];
	fontSize: {
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	fontWeight: {
		regular: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	lineHeight: {
		"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
};
export type TitleColorProperties = keyof typeof propertiesTitle.color;
export type TitleFontSizeProperties = keyof typeof propertiesTitle.fontSize;
export type TitleFontWeightProperties = keyof typeof propertiesTitle.fontWeight;
export type TitleLineHeightProperties = keyof typeof propertiesTitle.lineHeight;
export type TitleConditions<T> = Conditions<T>;
export interface TitleSprinkle {
	/**
	 * The fontSize property sets the size of the title.
	 * @default base
	 */
	fontSize?: TitleFontSizeProperties | TitleConditions<TitleFontSizeProperties>;
	/**
	 * The fontWeight property sets how thick or thin characters in title should be displayed.
	 * @default regular
	 */
	fontWeight?: TitleFontWeightProperties | TitleConditions<TitleFontWeightProperties>;
	/**
	 * The lineHeight property specifies the line height of the title.
	 * @default base
	 */
	lineHeight?: TitleLineHeightProperties | TitleConditions<TitleLineHeightProperties>;
	/**
	 * The textAlign property specifies the horizontal alignment of title.
	 * @default left
	 */
	textAlign?: TextAlign | TitleConditions<TextAlign>;
	/**
	 * The color property is used to set the color of the title.
	 * @default neutral-textLow
	 */
	color?: TitleColorProperties | TitleConditions<TitleColorProperties>;
}
export declare const title: {
	sprinkle: ((props: {
		color?: "primary-textLow" | "success-textLow" | "warning-textLow" | "danger-textLow" | "neutral-background" | "neutral-textLow" | "primary-textHigh" | "success-textHigh" | "warning-textHigh" | "danger-textHigh" | "neutral-textHigh" | {
			xs?: "primary-textLow" | "success-textLow" | "warning-textLow" | "danger-textLow" | "neutral-background" | "neutral-textLow" | "primary-textHigh" | "success-textHigh" | "warning-textHigh" | "danger-textHigh" | "neutral-textHigh" | undefined;
			md?: "primary-textLow" | "success-textLow" | "warning-textLow" | "danger-textLow" | "neutral-background" | "neutral-textLow" | "primary-textHigh" | "success-textHigh" | "warning-textHigh" | "danger-textHigh" | "neutral-textHigh" | undefined;
			lg?: "primary-textLow" | "success-textLow" | "warning-textLow" | "danger-textLow" | "neutral-background" | "neutral-textLow" | "primary-textHigh" | "success-textHigh" | "warning-textHigh" | "danger-textHigh" | "neutral-textHigh" | undefined;
			xl?: "primary-textLow" | "success-textLow" | "warning-textLow" | "danger-textLow" | "neutral-background" | "neutral-textLow" | "primary-textHigh" | "success-textHigh" | "warning-textHigh" | "danger-textHigh" | "neutral-textHigh" | undefined;
		} | undefined;
		textAlign?: TextAlign | {
			xs?: TextAlign | undefined;
			md?: TextAlign | undefined;
			lg?: TextAlign | undefined;
			xl?: TextAlign | undefined;
		} | undefined;
		fontSize?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | {
			xs?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | undefined;
			md?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | undefined;
			lg?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | undefined;
			xl?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | undefined;
		} | undefined;
		fontWeight?: "regular" | "medium" | "bold" | {
			xs?: "regular" | "medium" | "bold" | undefined;
			md?: "regular" | "medium" | "bold" | undefined;
			lg?: "regular" | "medium" | "bold" | undefined;
			xl?: "regular" | "medium" | "bold" | undefined;
		} | undefined;
		lineHeight?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | {
			xs?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | undefined;
			md?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | undefined;
			lg?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | undefined;
			xl?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "1" | "2" | "3" | "4" | "5" | "0-5" | "6" | "1-5" | "2-5" | "3-5" | "4-5" | "7" | "8" | "9" | "10" | "11" | "12" | "14" | "16" | "18" | "20" | undefined;
		} | undefined;
	}) => string) & {
		properties: Set<"fontSize" | "fontWeight" | "color" | "lineHeight" | "textAlign">;
	};
	properties: {
		color: {
			"primary-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textHigh": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		textAlign: TextAlign[];
		fontSize: {
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		fontWeight: {
			regular: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		lineHeight: {
			"0-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"1-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"2-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"3-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"4-5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h1: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h2: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h3: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h4: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h5: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			h6: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
	};
	classnames: {
		base: string;
		appearance: Record<"h1" | "h2" | "h3" | "h4" | "h5" | "h6", string>;
	};
};
export declare const toast: {
	classnames: {
		container: string;
		appearance: Record<"primary" | "success" | "danger" | "progress", string>;
	};
};
export declare const list: {
	classnames: {
		container: string;
		container__item: string;
		skeleton: string;
	};
};
export declare const multiSelect: {
	sprinkle: ((props: {
		zIndex?: "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | {
			xs?: "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined;
			md?: "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined;
			lg?: "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined;
			xl?: "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined;
		} | undefined;
	}) => string) & {
		properties: Set<"zIndex">;
	};
	properties: {
		zIndex: {
			"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
	};
	classnames: {
		appearance: Record<"success" | "warning" | "danger" | "neutral", string>;
		container: string;
		container__icon: string;
		container__button: string;
	};
};
declare const propertiesPopover: {
	backgroundColor: {
		"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	color: {
		"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	padding: {
		base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		none: string;
	};
	zIndex: {
		"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	overflow: Overflow[];
};
export type PopoverColorProperties = keyof typeof propertiesPopover.color;
export type PopoverBackgroundColorProperties = keyof typeof propertiesPopover.backgroundColor;
export type PopoverPaddingProperties = keyof typeof propertiesPopover.padding;
export type PopoverZIndexProperties = keyof typeof propertiesPopover.zIndex;
export interface PopoverSprinkle {
	/**
	 * The width property specifies the width of a popover's content area.
	 * @default fit-content
	 */
	width?: string | Conditions<string>;
	/**
	 * The maxWidth property specifies the maximum width of a popover's content area.
	 */
	maxWidth?: string | Conditions<string>;
	/**
	 * The height property specifies the height of a popover's content area.
	 */
	height?: string | Conditions<string>;
	/**
	 * The zIndex property specifies the stack order of the popover.
	 */
	zIndex?: PopoverZIndexProperties | Conditions<PopoverZIndexProperties>;
	/**
	 * The backgroundColor property sets the background color of the popover.
	 * @default neutral-background
	 * @examples ["neutral-interactive", { xs: "neutral-surface", md: "neutral-interactive" }]
	 */
	backgroundColor?: PopoverBackgroundColorProperties | Conditions<PopoverBackgroundColorProperties>;
	/**
	 * The color property is used to set the color of the popover.
	 * @default neutral-background
	 */
	color?: PopoverColorProperties | Conditions<PopoverColorProperties>;
	/**
	 * The padding properties are used to generate space around an popover's content area.
	 * @default base
	 */
	padding?: PopoverPaddingProperties | Conditions<PopoverPaddingProperties>;
	/**
	 * The overflow shorthand property sets the desired behavior for an popover's content overflow.
	 */
	overflow?: Overflow | Conditions<Overflow>;
}
export declare const popover: {
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {
				backgroundColor: {
					values: {
						"primary-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"success-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"warning-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"danger-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-background": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"primary-interactiveHover": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "backgroundColor";
				};
				padding: {
					values: {
						base: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						small: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						none: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "padding";
				};
				color: {
					values: {
						"primary-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"success-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"warning-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"danger-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-background": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"neutral-surfaceHighlight": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						"primary-interactiveHover": {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "color";
				};
				zIndex: {
					values: {
						100: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						200: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						300: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						400: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						500: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						600: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						700: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						800: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						900: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "zIndex";
				};
				overflow: {
					values: {
						hidden: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						auto: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						visible: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						scroll: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: Overflow[];
					name: "overflow";
				};
			};
		} & {
			config: {
				width: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: true;
					name: "width";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
				maxWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: true;
					name: "maxWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
				height: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: true;
					name: "height";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
			};
		} & {
			config: {
				[x: string]: {
					mappings: ("width" | "zIndex" | "color" | "backgroundColor" | "height" | "maxWidth" | "overflow" | "padding")[];
				};
			};
		}
	]>;
	properties: {
		backgroundColor: {
			"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		color: {
			"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-interactiveHover": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		padding: {
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			none: string;
		};
		zIndex: {
			"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		overflow: Overflow[];
	};
	classnames: {
		content: string;
		overlay: string;
	};
};
export declare const radio: {
	sprinkle: ((props: {
		cursor?: Cursor | undefined;
	}) => string) & {
		properties: Set<"cursor">;
	};
	properties: {
		cursor: Cursor[];
	};
	classnames: {
		base: string;
		container: string;
		container__content: Record<"button" | "radio" | "disabled", string>;
		container__input: string;
		container__checkmark: string;
		container__checkicon: string;
	};
};
export declare const select: {
	classnames: {
		container: string;
		container__icon: string;
		appearance: Record<"success" | "warning" | "danger" | "neutral" | "ai-generative", string>;
		aiGenerated: string;
	};
};
export declare const skeleton: {
	classnames: {
		base: string;
	};
};
export declare const spinner: {
	sprinkle: ((props: {
		color?: "currentColor" | "primary-interactive" | "primary-surface" | "primary-textLow" | "success-textLow" | "success-surface" | "danger-interactive" | "danger-surface" | "danger-textLow" | "neutral-background" | "neutral-interactive" | "neutral-surface" | "neutral-textLow" | "success-interactive" | undefined;
	}) => string) & {
		properties: Set<"color">;
	};
	properties: {
		color: {
			currentColor: string;
			"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-interactive": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-textLow": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
	};
	classnames: {
		base: string;
	};
};
export declare const toggle: {
	classnames: {
		container: string;
		container__input: string;
		container__slider: string;
	};
};
export declare const link: {
	sprinkle: ((props: {
		textDecoration?: TextDecoration | undefined;
		fontSize?: "caption" | "base" | "highlight" | undefined;
		lineHeight?: "caption" | "base" | "highlight" | undefined;
	}) => string) & {
		properties: Set<"fontSize" | "lineHeight" | "textDecoration">;
	};
	properties: {
		textDecoration: TextDecoration[];
		fontSize: {
			caption: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			highlight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		lineHeight: {
			readonly caption: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			readonly highlight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
	};
	classnames: {
		base: string;
		appearance: Record<"primary" | "danger" | "neutral" | "neutral-background", string>;
	};
};
export interface TooltipSprinkle {
	/**
	 * The maxWidth property specifies the maximum width of a popover's content area.
	 */
	maxWidth?: string | Conditions<string>;
}
export declare const tooltip: {
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {
				maxWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: true;
					name: "maxWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
			};
		} & {
			config: {
				[x: string]: {
					mappings: "maxWidth"[];
				};
			};
		}
	]>;
	properties: {
		config: {
			maxWidth: {
				dynamic: {
					default: string;
					conditions: Record<"xs" | "md" | "lg" | "xl", string>;
				};
				dynamicScale: true;
				name: "maxWidth";
				vars: {
					default: string;
					conditions: Record<"xs" | "md" | "lg" | "xl", string>;
				};
			};
		};
	} & {
		config: {
			[x: string]: {
				mappings: "maxWidth"[];
			};
		};
	};
	classnames: {
		container: string;
		content: string;
	};
};
export declare const thumbnail: {
	sprinkle: ((props: {
		aspectRatio?: AspectRatio | undefined;
	}) => string) & {
		properties: Set<"aspectRatio">;
	};
	properties: {
		aspectRatio: AspectRatio[];
	};
	classnames: {
		container: string;
		container__image: string;
		container__placeholder: string;
		skeleton: string;
		width: string;
	};
};
export declare const textarea: {
	classnames: {
		appearance: Record<"success" | "warning" | "danger" | "neutral" | "transparent" | "ai-generative", string>;
		fieldSizing: string;
		resize: Record<"disabled" | "enabled", string>;
		aiGenerated: string;
	};
};
export declare const progressBar: {
	classnames: {
		container: string;
		appearance: Record<"primary" | "success" | "warning" | "danger" | "neutral" | "ai-generative", string>;
	};
};
export declare const divider: {
	classnames: {
		orientation: Record<"horizontal" | "vertical", string>;
		horizontalThickness: Record<1 | 2 | 3, string>;
		verticalThickness: Record<1 | 2 | 3, string>;
		appearance: Record<"neutral", string>;
	};
};
export declare const accordion: {
	sprinkle: ((props: {
		borderTop?: "base" | "none" | undefined;
		borderBottom?: "base" | "none" | undefined;
		padding?: "base" | "none" | undefined;
	}) => string) & {
		properties: Set<"borderBottom" | "borderTop" | "padding">;
	};
	properties: {
		borderTop: {
			none: string;
			base: string;
		};
		borderBottom: {
			none: string;
			base: string;
		};
		padding: {
			none: string;
			base: string;
		};
	};
	classnames: {
		header: string;
		header__content: string;
		header__description: string;
		header__title: string;
		header_active: string;
		body: string;
	};
};
export declare const alert: {
	classnames: {
		appearance: Record<"primary" | "success" | "warning" | "danger" | "neutral", string>;
		container: string;
		container__body: string;
		container__content: string;
		container__close_appearance: Record<"primary" | "success" | "warning" | "danger" | "neutral", string>;
	};
};
export declare const card: {
	classnames: {
		container: string;
		container__footer: string;
	};
	subComponents: {
		header: {
			sprinkle: ((props: {
				padding?: "base" | "small" | "none" | undefined;
			}) => string) & {
				properties: Set<"padding">;
			};
			properties: {
				padding: {
					base: string;
					small: string;
					none: string;
				};
			};
		};
		body: {
			sprinkle: ((props: {
				padding?: "base" | "small" | "none" | undefined;
			}) => string) & {
				properties: Set<"padding">;
			};
			properties: {
				padding: {
					base: string;
					small: string;
					none: string;
				};
			};
		};
		footer: {
			sprinkle: ((props: {
				padding?: "base" | "small" | "none" | undefined;
			}) => string) & {
				properties: Set<"padding">;
			};
			properties: {
				padding: {
					base: string;
					small: string;
					none: string;
				};
			};
		};
	};
	sprinkle: ((props: {
		backgroundColor?: "primary-surface" | "primary-surfaceHighlight" | "success-surface" | "success-surfaceHighlight" | "warning-surface" | "warning-surfaceHighlight" | "danger-surface" | "danger-surfaceHighlight" | "neutral-background" | "neutral-surface" | "neutral-surfaceHighlight" | undefined;
		padding?: "base" | "small" | "none" | undefined;
	}) => string) & {
		properties: Set<"backgroundColor" | "padding">;
	};
	properties: {
		backgroundColor: {
			"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"success-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"danger-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"warning-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		padding: {
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			none: string;
		};
	};
};
export declare const collapsible: {
	classnames: {
		body: string;
		bodyAnimation: string;
		bodyReversalAnimation: string;
	};
};
declare const propertiesModal: {
	padding: {
		base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		none: string;
	};
};
export type PaddingProperties = keyof typeof propertiesModal.padding;
export interface ModalSprinkle {
	/**
	 * The maxWidth property specifies the maxWidth of a modal's content area. The width of the modal will be defined by the width of the content in this prop.
	 * @default { xs: "100%", md: "500px" }
	 */
	maxWidth?: string | Conditions<string>;
	/**
	 * The padding properties are used to generate space around an modal's content area.
	 * @default base
	 */
	padding?: PaddingProperties | Conditions<PaddingProperties>;
}
export declare const modal: {
	classnames: {
		overlay: string;
		overlayScoped: string;
		container: string;
		container__close: string;
		container__footer: string;
	};
	subComponents: {
		header: {
			sprinkle: ((props: {
				padding?: "base" | "small" | "none" | undefined;
			}) => string) & {
				properties: Set<"padding">;
			};
			properties: {
				padding: {
					base: string;
					small: string;
					none: string;
				};
			};
		};
		body: {
			sprinkle: ((props: {
				padding?: "base" | "small" | "none" | undefined;
			}) => string) & {
				properties: Set<"padding">;
			};
			properties: {
				padding: {
					base: string;
					small: string;
					none: string;
				};
			};
		};
		footer: {
			sprinkle: ((props: {
				padding?: "base" | "small" | "none" | undefined;
			}) => string) & {
				properties: Set<"padding">;
			};
			properties: {
				padding: {
					base: string;
					small: string;
					none: string;
				};
			};
		};
	};
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {
				maxWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: true;
					name: "maxWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
				padding: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: {
						base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "padding";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
			};
		} & {
			config: {
				[x: string]: {
					mappings: ("maxWidth" | "padding")[];
				};
			};
		}
	]>;
	properties: {
		padding: {
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			none: string;
		};
	};
};
export declare const pagination: {
	classnames: {
		container: string;
	};
};
declare const sidebarSprinkle: {
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {
				zIndex: {
					values: {
						100: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						200: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						300: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						400: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						500: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						600: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						700: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						800: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						900: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "zIndex";
				};
				padding: {
					values: {
						base: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						small: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						none: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "padding";
				};
			};
		} & {
			config: {
				maxWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: true;
					name: "maxWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
			};
		} & {
			config: {
				[x: string]: {
					mappings: ("zIndex" | "maxWidth" | "padding")[];
				};
			};
		}
	]>;
	properties: {
		zIndex: {
			"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		padding: {
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			none: string;
		};
	};
};
export type SidebarPaddingProperties = keyof typeof sidebarSprinkle.properties.padding;
export type SidebarZIndexProperties = keyof typeof sidebarSprinkle.properties.zIndex;
export interface SidebarSprinkle {
	/**
	 * The maxWidth property specifies the maxWidth of a sidebar's content area.
	 * @default 375px
	 */
	maxWidth?: string | Conditions<string>;
	/**
	 * The zIndex property specifies the stack order of the sidebar.
	 */
	zIndex?: SidebarZIndexProperties | Conditions<SidebarZIndexProperties>;
	/**
	 * The padding properties are used to generate space around an sidebar's content area.
	 * @default base
	 */
	padding?: SidebarPaddingProperties | Conditions<SidebarPaddingProperties>;
}
export declare const sidebar: {
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {
				zIndex: {
					values: {
						100: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						200: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						300: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						400: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						500: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						600: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						700: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						800: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						900: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "zIndex";
				};
				padding: {
					values: {
						base: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						small: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
						none: {
							default: string;
							conditions: Record<"xs" | "md" | "lg" | "xl", string>;
						};
					};
					staticScale: {
						base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "padding";
				};
			};
		} & {
			config: {
				maxWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
					dynamicScale: true;
					name: "maxWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl", string>;
					};
				};
			};
		} & {
			config: {
				[x: string]: {
					mappings: ("zIndex" | "maxWidth" | "padding")[];
				};
			};
		}
	]>;
	properties: {
		zIndex: {
			"100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"200": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"300": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"400": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"500": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"600": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"700": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"800": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"900": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		padding: {
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			none: string;
		};
	};
	classnames: {
		overlay: string;
		overlayScoped: string;
		container: string;
		containerScoped: string;
		container__header: string;
		container__body: string;
		container__footer: string;
		position: Record<"left" | "right", string>;
		isVisible: string;
	};
};
export declare const stepper: {
	classnames: {
		container: string;
		item: string;
		item__disabled: string;
		item__icon: string;
		item__line: string;
		item__icon_started: string;
		item__icon_completed: string;
		item__icon_pending: string;
		item__icon_selected: string;
		item__label: string;
		item__label_started: string;
		item__label_selected: string;
		item__label_completed: string;
		item__label_pending: string;
	};
	sprinkle: ((props: {}) => string) & {
		properties: Set<never>;
	};
	properties: {};
};
export declare const tabs: {
	classnames: {
		container: string;
		container__item: Record<"default" | "fullWidth", string>;
		container__button: Record<"default" | "active" | "fullWidth", string>;
		container__panel: string;
	};
};
declare const propertiesTable: {
	backgroundColor: {
		transparent: string;
		"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
	};
	padding: {
		base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		none: string;
	};
};
export type TablePaddingProperties = keyof typeof propertiesTable.padding;
export type TableRowBackgroundColorProperties = keyof typeof propertiesTable.backgroundColor;
export interface TableConditions<T> extends Conditions<T> {
	rest?: T;
	focus?: T;
	active?: T;
	hover?: T;
}
export interface TableSprinkle {
	/**
	 * The width property specifies the width of a table's content area.
	 */
	width?: string | TableConditions<string>;
	/**
	 * The maxWidth property specifies the maxWidth of a table's content area.
	 */
	maxWidth?: string | TableConditions<string>;
	/**
	 * The minWidth property specifies the minWidth of a table's content area.
	 */
	minWidth?: string | TableConditions<string>;
	/**
	 * The backgroundColor property sets the background color of the table.
	 */
	backgroundColor?: TableRowBackgroundColorProperties | TableConditions<TableRowBackgroundColorProperties>;
	/**
	 * The padding properties are used to generate space around an table's content area.
	 */
	padding?: TablePaddingProperties | TableConditions<TablePaddingProperties>;
}
export declare const table: {
	sprinkle: import("rainbow-sprinkles/dist/declarations/src/createRuntimeFn").SprinklesFn<[
		{
			config: {};
		} & {
			config: {
				width: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
					dynamicScale: true;
					name: "width";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
				};
				maxWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
					dynamicScale: true;
					name: "maxWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
				};
				minWidth: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
					dynamicScale: true;
					name: "minWidth";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
				};
				backgroundColor: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
					dynamicScale: {
						transparent: string;
						"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
					};
					name: "backgroundColor";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
				};
				padding: {
					dynamic: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
					dynamicScale: {
						base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
						none: string;
					};
					name: "padding";
					vars: {
						default: string;
						conditions: Record<"xs" | "md" | "lg" | "xl" | "focus" | "rest" | "active" | "hover", string>;
					};
				};
			};
		} & {
			config: {
				[x: string]: {
					mappings: ("width" | "backgroundColor" | "maxWidth" | "minWidth" | "padding")[];
				};
			};
		}
	]>;
	properties: {
		backgroundColor: {
			transparent: string;
			"neutral-background": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"neutral-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surface": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			"primary-surfaceHighlight": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
		};
		padding: {
			base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			small: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
			none: string;
		};
	};
	classnames: {
		container: string;
		container__head: string;
		container__body: string;
		container__row: string;
		container__cell: string;
	};
};
export declare const segmentedControl: {
	subcomponents: {
		button: {
			classnames: {
				appearance: Record<"default" | "selected", string>;
				fullWidth: string;
			};
		};
	};
};
export declare const scrollPane: {
	classnames: {
		scrollArea: string;
		scrollAreaHidden: string;
		direction: Record<"horizontal" | "vertical", string>;
		gradient: string;
		gradientVariants: Record<"horizontal-left" | "horizontal-right" | "vertical-top" | "vertical-bottom", string>;
		arrow: string;
		arrowVariants: Record<"horizontal-left" | "horizontal-right" | "vertical-top" | "vertical-bottom", string>;
	};
};
export declare const calendar: {
	classnames: {
		table: string;
		head: string;
		head_stickyWeekdays: string;
		body: string;
		row: string;
		cell: string;
		cell__head: string;
		day: string;
		day_fullWidth: string;
		day_disabled: string;
		day_today: string;
		day_outside: string;
		day__start: string;
		day__middle: string;
		day__end: string;
		day_selected: string;
		caption: string;
		nav: string;
		nav__button: string;
		months: string;
		caption_start: string;
		caption_end: string;
	};
};
export declare const editor: {
	classnames: {
		container: Record<"success" | "warning" | "danger" | "neutral", string>;
		toolbar: string;
		placeholder: string;
		content: string;
		text__italic: string;
		nested_list__item: string;
	};
};

export {};
